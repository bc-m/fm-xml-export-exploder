---
source: src/main.rs
expression: output_content
---
#  PURPOSE: Add Admin API Public Key
#  HISTORY:
     - Created:   2020-01-19 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  2020-00-00 

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Gehe zu Bezugsdatensatz [ Table: PUB_FMS__fmserver ; Layout: "Admin API" ; Show related ]
Script ausführen [ Aus Liste ; "Set Config" ]
Schreibe Änderung Datens./Abfrage [ Mit Dialog: OFF ]
Gehe zu Layout [ Layout: <Originallayout> ; Animation: Ohne ]
Variable setzen [ $endpoint ; "/server/config/pkipublickey" ]
Variable setzen [ $json ; JSONSetElement ( "" 
				 ; [ "name"; PUB__publickeys::name ; JSONString ]
				 ; [ "publicKey"; Austauschen ( PUB__publickeys::publicKey ; "¶" ; "" ) ; JSONString ]
				) ]

Variable setzen [ $curloptions ; " --request POST" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --data @$json" &
				" --dump-header $$my.headers" ]
# set api update variable
Variable setzen [ $$API.UPDATE ; "1" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# handle response
	Fenster schließen
	Script ausführen [ Aus Liste ; "Get FileMaker Admin API Public Keys Server Setting" ]
Ende (wenn)

# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
