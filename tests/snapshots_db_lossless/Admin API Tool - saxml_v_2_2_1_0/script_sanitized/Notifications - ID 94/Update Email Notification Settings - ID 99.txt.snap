---
source: src/main.rs
expression: output_content
---
#  PURPOSE: Update Email Notification Settings
#  HISTORY:
     - Created:   2020-01-11 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Script ausführen [ Aus Liste ; "Set Config" ]
Variable setzen [ $endpoint ; "/server/notifications/email" ]
Variable setzen [ $json ; JSONSetElement ( ""
				 ; [ "emailSenderAddress"; FMS__fmserver::emailSenderAddress ; JSONString ]
				 ; [ "emailReplyAddress"; FMS__fmserver::emailReplyAddress ; JSONString ]
				 ; [ "emailRecipients"; FMS__fmserver::emailRecipients ; JSONString ]
				 ; [ "smtpServerAddress"; FMS__fmserver::smtpServerAddress ; JSONString ]
				 ; [ "smtpServerPort"; FMS__fmserver::smtpServerPort ; JSONNumber ]
				 ; [ "smtpAuthType"; FMS__fmserver::smtpAuthType ; JSONNumber ]
				 ; [ "smtpSecurity"; FMS__fmserver::smtpSecurity ; JSONNumber ]
				) ]
Wenn [ FMS__fmserver::smtpAuthType ≠ "0" ]
	Wenn [ IstLeer ( FMS__fmserver::smtpUsername ) ODER IstLeer ( FMS__fmserver::smtpPassword ) ]
		Eigenes Dialogfeld anzeigen [ Title: "Field(s) Required" ; Message: "You must enter the SMTP username and password to continue." ; ⚠️ PARAMETER "Button1" NOT PARSED ⚠️ ; ⚠️ PARAMETER "Button2" NOT PARSED ⚠️ ; ⚠️ PARAMETER "Button3" NOT PARSED ⚠️ ]
		Aktuelles Script verlassen [  Wahr ]
	Ende (wenn)
	Variable setzen [ $json ; JSONSetElement ( $json
					 ; [ "smtpUsername"; FMS__fmserver::smtpUsername ; JSONString ]
					 ; [ "smtpPassword"; FMS__fmserver::smtpPassword ; JSONString ]
					) ]
Ende (wenn)
Variable setzen [ $curloptions ; " --request PATCH" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --data @$json" &
				" --dump-header $$my.headers" ]
# set api update variable
Variable setzen [ $$API.UPDATE ; "1" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
