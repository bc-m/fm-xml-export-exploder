---
source: src/main.rs
expression: output_content
---
#  PURPOSE: WPE Settings for a Machine
#  HISTORY:
     - Created:   2019-06-11 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  2018-MM-DD by FName LName

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Variable setzen [ $my.portal_row ; Hole ( AktiveAusschnittZeileNr ) ]

Script ausführen [ Aus Liste ; "Set Config" ]
Variable setzen [ $endpoint ; "/wpe/config/" & FMS_WPE__wpe::id_wpe ]
Variable setzen [ $curloptions ; " --request GET" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --dump-header $$my.headers" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# parse json response
	Gehe zu Ausschnittreihe [ Mit Dialog: OFF ; Nach Formel… ]
	Wenn [ NICHT IstLeer ( JSONGetElement ( $$my.result ; "response.id" ) ) ]
		Feldwert setzen [ FMS_WPE__wpe::host ; JSONGetElement ( $$my.result ; "response.host" ) ]
		Feldwert setzen [ FMS_WPE__wpe::ip ; JSONGetElement ( $$my.result ; "response.ip" ) ]
		Feldwert setzen [ FMS_WPE__wpe::connections ; JSONGetElement ( $$my.result ; "response.connections" ) ]
		Feldwert setzen [ FMS_WPE__wpe::enabled ; JSONGetElement ( $$my.result ; "response.enabled" ) ]
	Ende (wenn)
	
Ende (wenn)

# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
