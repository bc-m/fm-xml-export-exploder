---
source: src/main.rs
expression: output_content
---
#  PURPOSE: Database Sign-In for Amazon
#  HISTORY:
     - Created:   2018-05-09 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  2019-04-23 by Mike Duncan, update to v2 admin api

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Script ausführen [ Aus Liste ; "Set Config" ]
Variable setzen [ $endpoint ; "/extauth/dbsignin/amazon" ]
Variable setzen [ $json ; JSONSetElement ( "" 
				  ;[ "EnableAmazonSignin"; FMS__fmserver::EnableAmazonSignin ; JSONBoolean ]
				 ) ]
Variable setzen [ $curloptions ; " --request PATCH" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --data @$json" &
				" --dump-header $$my.headers" ]
# set api update variable
Variable setzen [ $$API.UPDATE ; "1" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# parse json response
	Feldwert setzen [ FMS__fmserver::EnableAmazonSignin ; JSONGetElement ( $$my.result ; "response.ProviderEnabled" ) ]
	
Ende (wenn)
# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
