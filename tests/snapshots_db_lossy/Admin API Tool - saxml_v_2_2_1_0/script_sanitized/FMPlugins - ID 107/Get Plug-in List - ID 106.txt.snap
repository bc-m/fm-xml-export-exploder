---
source: src/main.rs
expression: output_content
---
#  PURPOSE: List Plugins
#  HISTORY:
     - Created:   2020-01-12 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Script ausführen [ Aus Liste ; "Set Config" ]
Variable setzen [ $endpoint ; "/plugins" ]
Variable setzen [ $curloptions ; " --request GET" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --dump-header $$my.headers" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# parse json response
	Feldwert setzen [ FMS__fmserver::totalDBCount ; JSONGetElement ( $$my.result ; "response.enabled" ) ]
	// Feldwert setzen [ FMS__fmserver::openDBCount ; JSONGetElement ( $$my.result ; "response.openDBCount" ) ]
	
	Variable setzen [ $this.id ; FMS__fmserver::ID ]
	# get plugins
	Fenster fixieren
	Wenn [ IstLeer ( FMS_PLG__plugins::ID ) ]
		Gehe zu Layout [ Layout: "PLG__plugins" ; Animation: Ohne ]
	Sonst
		Gehe zu Bezugsdatensatz [ Table: FMS_PLG__plugins ; Layout: "PLG__plugins" ; Show related ]
		Alle Datensätze löschen [ Mit Dialog: OFF ]
	Ende (wenn)
	Variable setzen [ $this.loop ; 0 ]
	Schleife (Anfang) [ Flush: Immer ]
		Wenn [ NICHT IstLeer ( JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].id" ) ) ]
			Neuer Datensatz/Abfrage
			Feldwert setzen [ PLG__plugins::ID_Server ; $this.id ]
			Feldwert setzen [ PLG__plugins::id_plugin ; JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].id" ) ]
			Feldwert setzen [ PLG__plugins::filename ; JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].filename" ) ]
			Feldwert setzen [ PLG__plugins::description ; JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].description" ) ]
			Feldwert setzen [ PLG__plugins::enabled ; JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].enabled" ) ]
			Feldwert setzen [ PLG__plugins::pluginName ; JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].pluginName" ) ]
		Ende (wenn)
		
		Variable setzen [ $this.loop ; $this.loop + 1 ]
		Verlasse Schleife wenn [ IstLeer ( JSONGetElement ( $$my.result ; "response.plugins[" & $this.loop & "].id" ) ) ]
		
	Schleife (Ende)
	
	Gehe zu Layout [ Layout: <Originallayout> ; Animation: Ohne ]
	Gehe zu Objekt [ "panel_plugins" ]
	
Ende (wenn)

# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
