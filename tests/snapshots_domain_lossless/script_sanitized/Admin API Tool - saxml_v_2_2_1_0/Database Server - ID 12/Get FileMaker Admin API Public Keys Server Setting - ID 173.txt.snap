---
source: src/main.rs
expression: output_content
---
#  PURPOSE: Get Server Current Folder Settings
#  HISTORY:
     - Created:   2020-01-19 by Mike Duncan (mduncan@soliantconsulting.com)
     - Modified:  2020-00-00 

AnwenderAbbruchZulassen setzen [ ON ]
Fehleraufzeichnung setzen [ ON ]
Variable setzen [ $error ; 0 ]

# -------------------------------------------------------------
#  SET-UP
# -------------------------------------------------------------
Script ausführen [ Aus Liste ; "Set Config" ]
Variable setzen [ $endpoint ; "/server/config/pkipublickey" ]
Variable setzen [ $curloptions ; " --request GET" &
				" --header \"Authorization: Bearer " & $$my.token & "\"" &
				" --header \"Content-Type: application/json\"" &
				" --dump-header $$my.headers" ]

# -------------------------------------------------------------
#  PROCESS
# -------------------------------------------------------------
Aus URL einfügen [ SSL-Zertifikate verifizieren: OFF ; Auswahl: ON ; Mit Dialog: OFF ; Target: $$my.result ; ⚠️ PARAMETER "URL" NOT PARSED ⚠️ ; $curloptions ]
Script ausführen [ Aus Liste ; "Handle response" ]

Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# parse json response
	
Ende (wenn)
Wenn [ Hole ( ScriptErgebnis ) = "1" ]
	# parse json response
	
	Variable setzen [ $this.id ; FMS__fmserver::ID ]
	# get files
	Fenster fixieren
	Wenn [ IstLeer ( FMS_PUB__publickeys::ID ) ]
	Sonst
		Gehe zu Bezugsdatensatz [ Table: FMS_PUB__publickeys ; Layout: "PUB__publickeys" ; Show related ]
		Ersetze alle Feldwerte [ PUB__publickeys::zz_sync ; Durch Berechnung ersetzen: "missing" ]
		Gehe zu Layout [ Layout: <Originallayout> ; Animation: Ohne ]
	Ende (wenn)
	
	
	Variable setzen [ $this.loop ; 0 ]
	Schleife (Anfang) [ Flush: Immer ]
		Wenn [ NICHT IstLeer ( JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].name" ) ) ]
			# set global to create related records via idempotent relationship
			Feldwert setzen [ FMS__fmserver::zz_PublicKeyName_g ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].name" ) ]
			
			Feldwert setzen [ FMS_PUB__publickeys sync::ID_Server ; $this.id ]
			Feldwert setzen [ FMS_PUB__publickeys sync::name ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].name" ) ]
			Feldwert setzen [ FMS_PUB__publickeys sync::publicKey ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].publicKey" ) ]
			Feldwert setzen [ FMS_PUB__publickeys sync::zz_sync ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].publicKey" ) ]
			Feldwert setzen [ FMS_PUB__publickeys sync::dateAdded ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].dateAdded" ) ]
			Feldwert setzen [ FMS_PUB__publickeys sync::lastAccessed ; JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].lastAccessed" ) ]
		Ende (wenn)
		
		Variable setzen [ $this.loop ; $this.loop + 1 ]
		Verlasse Schleife wenn [ IstLeer ( JSONGetElement ( $$my.result ; "response.pkiPublicKey[" & $this.loop & "].name" ) ) ]
		
	Schleife (Ende)
	
	Gehe zu Layout [ Layout: <Originallayout> ; Animation: Ohne ]
	Gehe zu Objekt [ "panel_publickey" ]
	
Ende (wenn)

# -------------------------------------------------------------
#  CLEAN UP
# -------------------------------------------------------------
Feldwert setzen [ FMS__fmserver::zz_PublicKeyName_g ; "" ]
Schreibe Änderung Datens./Abfrage [ Mit Dialog: OFF ]

Wenn [ $error = 0 ]
	#  set to exit true if you do not need to pass an error
	Variable setzen [ $error ; 1 // exit true ]
Ende (wenn)

Aktuelles Script verlassen [ $error ]
